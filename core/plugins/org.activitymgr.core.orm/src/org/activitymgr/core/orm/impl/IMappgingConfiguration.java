package org.activitymgr.core.orm.impl;

import java.lang.reflect.Field;

import org.activitymgr.core.orm.IConverter;

public interface IMappgingConfiguration {

	/**
	 * Retourne le nom de la table mapp�e sur la classe.
	 * 
	 * @param theClass
	 *            la classe mapp�e.
	 * @return le nom de la table mapp�e sur la classe.
	 */
	String getSQLTableName(Class<?> theClass);

	/**
	 * Retourne le nom de la colonne mapp�e sur l'attribut de la classe.
	 * 
	 * @param theClass
	 *            la classe mapp�e.
	 * @param attribte
	 *            l'attribut.
	 * @return le nom de la colonne mapp�e sur l'attribut de la classe.
	 */
	String getSQLColumnName(Class<?> theClass, Field attribute);

	/**
	 * Retourne la liste des attributs formant la cl� primaire de la classe
	 * mapp�e.
	 * 
	 * @param theClass
	 *            la classe mapp�e.
	 * @return la liste des attributs formant la cl� primaire de la classe
	 *         mapp�e.
	 */
	String[] getPrimaryKeyAttributesName(Class<?> theClass);

	/**
	 * Retourne l'�ventuel attribut auto g�n�r� par la base de donn�es.
	 * 
	 * @param theClass
	 *            la classe mapp�e.
	 * @return l'�ventuel attribut auto g�n�r� par la base de donn�es.
	 */
	Field getAutoGeneratedAttribute(Class<?> theClass);

	/**
	 * Retourne le format de la colonne.
	 * 
	 * @param theClass
	 *            la classe mapp�e.
	 * @param attribute
	 *            l'attribut.
	 * @return le format de la colone.
	 */
	String getAttributeFormat(Class<?> theClass, Field attribute);

	/**
	 * Return the attribute converter.
	 * 
	 * @param theClass
	 *            the mapped class.
	 * @param attribute
	 *            the attribute.
	 * @return the attribute converter.
	 */
	Class<? extends IConverter<?>> getAttributeConverter(
			Class<?> theClass, Field attribute);
}